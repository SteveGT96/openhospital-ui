// tslint:disable
/**
 * OH 2.0 Api Documentation
 * OH 2.0 Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Class representing a patient
 * @export
 * @interface PatientDTO
 */
export interface PatientDTO {
  /**
   * Address
   * @type {string}
   * @memberof PatientDTO
   */
  address?: string;
  /**
   * Age
   * @type {number}
   * @memberof PatientDTO
   */
  age?: number;
  /**
   * Age type
   * @type {string}
   * @memberof PatientDTO
   */
  agetype?: string;
  /**
   * allergies of patient
   * @type {string}
   * @memberof PatientDTO
   */
  allergies?: string;
  /**
   * Current anamnesis
   * @type {string}
   * @memberof PatientDTO
   */
  anamnesis?: string;
  /**
   * Birth date
   * @type {string}
   * @memberof PatientDTO
   */
  birthDate?: string;
  /**
   * BlobPhoto
   * @type {string}
   * @memberof PatientDTO
   */
  blobPhoto?: string;
  /**
   * Blood type (0-/+, A-/+ , B-/+, AB-/+)
   * @type {string}
   * @memberof PatientDTO
   */
  bloodType?: string;
  /**
   * City
   * @type {string}
   * @memberof PatientDTO
   */
  city?: string;
  /**
   * code of the Patient
   * @type {number}
   * @memberof PatientDTO
   */
  code?: number;
  /**
   * consensus flag
   * @type {boolean}
   * @memberof PatientDTO
   */
  consensusFlag?: boolean;
  /**
   * consensus service flag
   * @type {boolean}
   * @memberof PatientDTO
   */
  consensusServiceFlag?: boolean;
  /**
   * Father\'s status (D=dead, A=alive)
   * @type {string}
   * @memberof PatientDTO
   */
  father?: PatientDTOFatherEnum;
  /**
   * Father\'s name
   * @type {string}
   * @memberof PatientDTO
   */
  fatherName?: string;
  /**
   * First name of the patient
   * @type {string}
   * @memberof PatientDTO
   */
  firstName?: string;
  /**
   * hasInsurance (Y=Yes, N=no)
   * @type {string}
   * @memberof PatientDTO
   */
  hasInsurance?: PatientDTOHasInsuranceEnum;
  /**
   * lock
   * @type {number}
   * @memberof PatientDTO
   */
  lock?: number;
  /**
   * Mother\'s status (D=dead, A=alive)
   * @type {string}
   * @memberof PatientDTO
   */
  mother?: PatientDTOMotherEnum;
  /**
   * Mother\'s name
   * @type {string}
   * @memberof PatientDTO
   */
  motherName?: string;
  /**
   * Note
   * @type {string}
   * @memberof PatientDTO
   */
  note?: string;
  /**
   * Parent together (Y=Yes, N=no)
   * @type {string}
   * @memberof PatientDTO
   */
  parentTogether?: PatientDTOParentTogetherEnum;
  /**
   * Last name of the patient
   * @type {string}
   * @memberof PatientDTO
   */
  secondName?: string;
  /**
   * Sex
   * @type {string}
   * @memberof PatientDTO
   */
  sex?: PatientDTOSexEnum;
  /**
   * status
   * @type {string}
   * @memberof PatientDTO
   */
  status?: PatientDTOStatusEnum;
  /**
   * Tax code
   * @type {string}
   * @memberof PatientDTO
   */
  taxCode?: string;
  /**
   * Telephone
   * @type {string}
   * @memberof PatientDTO
   */
  telephone?: string;
}

/**
 * @export
 * @enum {string}
 */
export enum PatientDTOFatherEnum {
  A = "A",
  D = "D",
}
/**
 * @export
 * @enum {string}
 */
export enum PatientDTOHasInsuranceEnum {
  N = "N",
  Y = "Y",
}
/**
 * @export
 * @enum {string}
 */
export enum PatientDTOMotherEnum {
  A = "A",
  D = "D",
}
/**
 * @export
 * @enum {string}
 */
export enum PatientDTOParentTogetherEnum {
  N = "N",
  Y = "Y",
}
/**
 * @export
 * @enum {string}
 */
export enum PatientDTOSexEnum {
  F = "F",
  M = "M",
}
/**
 * @export
 * @enum {string}
 */
export enum PatientDTOStatusEnum {
  I = "I",
  O = "O",
}
