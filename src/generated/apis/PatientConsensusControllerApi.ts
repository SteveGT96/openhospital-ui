// tslint:disable
/**
 * OH 2.0 Api Documentation
 * OH 2.0 Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';
import {
    PatientConsensusDTO,
} from '../models';

export interface GetPatientConsensusUsingGETRequest {
    patientId: number;
}

export interface UpdatePatientConsensusUsingPUTRequest {
    patientId: number;
    patientConsensus: PatientConsensusDTO;
}

/**
 * no description
 */
export class PatientConsensusControllerApi extends BaseAPI {

    /**
     * getPatientConsensus
     */
    getPatientConsensusUsingGET({ patientId }: GetPatientConsensusUsingGETRequest): Observable<PatientConsensusDTO>
    getPatientConsensusUsingGET({ patientId }: GetPatientConsensusUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<PatientConsensusDTO>>
    getPatientConsensusUsingGET({ patientId }: GetPatientConsensusUsingGETRequest, opts?: OperationOpts): Observable<PatientConsensusDTO | RawAjaxResponse<PatientConsensusDTO>> {
        throwIfNullOrUndefined(patientId, 'patientId', 'getPatientConsensusUsingGET');

        const headers: HttpHeaders = {
            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication
        };

        return this.request<PatientConsensusDTO>({
            url: '/patientConsensus/{patientId}'.replace('{patientId}', encodeURI(patientId)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * updatePatientConsensus
     */
    updatePatientConsensusUsingPUT({ patientId, patientConsensus }: UpdatePatientConsensusUsingPUTRequest): Observable<PatientConsensusDTO>
    updatePatientConsensusUsingPUT({ patientId, patientConsensus }: UpdatePatientConsensusUsingPUTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<PatientConsensusDTO>>
    updatePatientConsensusUsingPUT({ patientId, patientConsensus }: UpdatePatientConsensusUsingPUTRequest, opts?: OperationOpts): Observable<PatientConsensusDTO | RawAjaxResponse<PatientConsensusDTO>> {
        throwIfNullOrUndefined(patientId, 'patientId', 'updatePatientConsensusUsingPUT');
        throwIfNullOrUndefined(patientConsensus, 'patientConsensus', 'updatePatientConsensusUsingPUT');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication
        };

        return this.request<PatientConsensusDTO>({
            url: '/patientConsensus/{patientId}'.replace('{patientId}', encodeURI(patientId)),
            method: 'PUT',
            headers,
            body: patientConsensus,
        }, opts?.responseOpts);
    };

}
